<?php

namespace ActivityBundle\Repository;

/**
 * ActivityRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ActivityRepository extends \Doctrine\ORM\EntityRepository
{
    public function mostviewed(){


        $query=$this->getEntityManager()
            ->createQuery("SELECT a FROM ActivityBundle:Activity a ORDER BY a.nbvue DESC ");
        return $query->getResult();

    }

    public  function mostliked(){

        $em = $this->getEntityManager();

        $rawQuery = '
            SELECT a.*
            FROM activity a, 
                (SELECT 
                idAct,
                count(1) nb 
                FROM likes l 
                GROUP BY idAct
                ) b
            WHERE a.id = b.idAct
            ORDER BY b.nb DESC
            LIMIT 4
            ';

        $statement = $em->getConnection()->prepare($rawQuery);
        // Set parameters
        $statement->execute();

        $result = $statement->fetchAll();
        return $result;

    }


    public  function mostrated(){

        $em = $this->getEntityManager();

        $rawQuery = '
            SELECT a.*
            FROM activity a, 
                (SELECT *, 
                (`security`+`beauty`+`budget`) AS ST 
                FROM `rating`
                ) b
            WHERE a.id = b.idAct
            ORDER BY b.ST DESC
            LIMIT 3
            ';

        $statement = $em->getConnection()->prepare($rawQuery);
        // Set parameters
        $statement->execute();

        $result = $statement->fetchAll();
        return $result;

    }

    public function countact(){


        $query=$this->getEntityManager()
            ->createQuery("SELECT count(a) as acts FROM ActivityBundle:Activity a");
        return $query->getResult();

    }

    public function sumvu(){
        $query=$this->getEntityManager()
            ->createQuery("SELECT SUM(a.nbvue) as sumact FROM ActivityBundle:Activity a");
        return $query->getResult();

    }

    public  function mostreported(){

        $em = $this->getEntityManager();

        $rawQuery = '
                    SELECT b.nb AS rcount, a.*,u.username
            FROM activity a, 
                (SELECT 
                idAct,
                count(1) nb 
                FROM reports l 
                GROUP BY idAct
                ) b, fos_user u
            WHERE a.id = b.idAct AND b.nb >= 1 AND u.id = a.iduser
            ';

        $statement = $em->getConnection()->prepare($rawQuery);
        // Set parameters
        $statement->execute();

        $result = $statement->fetchAll();
        return $result;

    }


}
